//
// Generated file, do not edit! Created by opp_msgtool 6.0 from msgs/phy_msg.msg.
//

#ifndef __PHY_MSG_M_H
#define __PHY_MSG_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// opp_msgtool version check
#define MSGC_VERSION 0x0600
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of opp_msgtool: 'make clean' should help.
#endif

class PhyMsg;
/**
 * Class generated from <tt>msgs/phy_msg.msg:19</tt> by opp_msgtool.
 * <pre>
 * //
 * // TODO generated message class
 * //
 * packet PhyMsg
 * {
 *     uint8_t payload[];
 * }
 * </pre>
 */
class PhyMsg : public ::omnetpp::cPacket
{
  protected:
    uint8_t *payload = nullptr;
    size_t payload_arraysize = 0;

  private:
    void copy(const PhyMsg& other);

  protected:
    bool operator==(const PhyMsg&) = delete;

  public:
    PhyMsg(const char *name=nullptr, short kind=0);
    PhyMsg(const PhyMsg& other);
    virtual ~PhyMsg();
    PhyMsg& operator=(const PhyMsg& other);
    virtual PhyMsg *dup() const override {return new PhyMsg(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    virtual void setPayloadArraySize(size_t size);
    virtual size_t getPayloadArraySize() const;
    virtual uint8_t getPayload(size_t k) const;
    virtual void setPayload(size_t k, uint8_t payload);
    virtual void insertPayload(size_t k, uint8_t payload);
    [[deprecated]] void insertPayload(uint8_t payload) {appendPayload(payload);}
    virtual void appendPayload(uint8_t payload);
    virtual void erasePayload(size_t k);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const PhyMsg& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, PhyMsg& obj) {obj.parsimUnpack(b);}


namespace omnetpp {

template<> inline PhyMsg *fromAnyPtr(any_ptr ptr) { return check_and_cast<PhyMsg*>(ptr.get<cObject>()); }

}  // namespace omnetpp

#endif // ifndef __PHY_MSG_M_H

